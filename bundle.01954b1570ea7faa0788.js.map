{"version":3,"sources":["webpack:///./src/tictactoe/tictactoe.js"],"names":["$","document","ready","on","makeMove","firstMove","secondMove","turn","board","count","next","x","this","data","y","text","evaluate","setTimeout","evaluateForDanger","active","alert","blessing","cpux","k","cpuy","string","danger","getRandomInt","max","Math","floor","random"],"mappings":"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","file":"bundle.01954b1570ea7faa0788.js","sourcesContent":["$(document).ready(function () {\n    $(document).on(\"click\", \".square\", makeMove)\n});\nlet turn = \"X\"\nlet firstMove;\nlet secondMove;\nlet board = [[0,0,0],[0,0,0],[0,0,0]]\nlet count = 1;\nlet next = 0;\n\nfunction makeMove(){\n  if (next < count) {\nnext = 10;\n\n  //make move and place your result in the array\n  let x = $(this).data(\"x\");\n  let y = $(this).data(\"y\");\n  if ($(this).text() == \"\") {\n  board[x][y] = turn;\n  $(this).text(turn);\n} else {\n  return;\n}\n//evaluate to see if anybody won\nif (evaluate(turn) == null) {\n  return;\n}\n\n//switch turn\n  turn = \"O\";\n//cpumove if placed in corner\nsetTimeout(function () {\n\nif (count == 1) {\nif ((x == 0 || x == 2) && (y == 0 || y == 2)){\n  firstMove = \"corner\";\n} else if (x == 1 && y == 1) {\n  firstMove = \"center\";\n} else {\n  firstMove = \"side\";\n}\n  switch (firstMove) {\n    case \"corner\":\n    board[1][1] = turn;\n    $(\"#11\").text(turn);\n    break;\n    case \"side\":\n    board[1][1] = turn;\n    $(\"#11\").text(turn);\n    break;\n    case \"center\":\n    board[0][0] = turn;\n    $(\"#00\").text(turn);\n    break;\n  }\n} else if (count == 2){\n  if ((x == 0 || x == 2) && (y == 0 || y == 2)){\n    secondMove = \"corner\";\n  } else {\n    secondMove = \"side\";\n  }\n\n  evaluateForDanger(turn);\n} else {\n  evaluateForDanger(turn);\n}\n\nevaluate(turn);\n\ncount++;\nnext = count-1\nturn = \"X\";\n\n\n}, 1000);\n}\n}\n\nfunction evaluate(active){\nif (\n  (board[0][0] == active && board[0][1] == active && board[0][2] == active) ||\n  (board[1][0] == active && board[1][1] == active && board[1][2] == active) ||\n  (board[2][0] == active && board[2][1] == active && board[2][2] == active) ||\n  (board[0][0] == active && board[1][0] == active && board[2][0] == active) ||\n  (board[0][1] == active && board[1][1] == active && board[2][1] == active) ||\n  (board[0][2] == active && board[1][2] == active && board[2][2] == active) ||\n  (board[1][1] == active && board[0][0] == active && board[2][2] == active) ||\n  (board[1][1] == active && board[0][2] == active && board[2][0] == active)\n  ) {\n    setTimeout(function () {\n      alert(\"winner is \" + active);\n      board = [[0,0,0],[0,0,0],[0,0,0]]\n      $(\".square\").text(\"\");\n      count = 1;\n      next = 0;\n\n      return null;\n    }, 250);\n\n} else  if (count == 5){\n\n  setTimeout(function () {\n    alert(\"draw!\");\n    board = [[0,0,0],[0,0,0],[0,0,0]]\n    $(\".square\").text(\"\");\n    count = 1;\n    next = 0;\n\n    return null;\n}, 250);\n} else {\n  return 10;\n}\n}\n\nfunction evaluateForDanger(active) {\n\n  let blessing = 0;\n  for (var x = 0; x < 3; x++) {\n    blessing = 0;\n    for (var y = 0; y < 3; y++) {\n      if (board[x][y] == \"O\") {\n        blessing++;\n      }\n      if (blessing == 2) {\n        let cpux = x;\n        for (let k = 0; k < 3; k++) {\n          if (board[x][k] == 0) {\n            let cpuy = k;\n            var string = \"#\" + cpux + cpuy;\n            board[cpux][cpuy] = turn;\n            $(string).text(turn);\n            return;\n          }\n        }\n        break;\n      }\n    }\n  }\n  for (var y = 0; y < 3; y++) {\n    blessing = 0\n    for (var x = 0; x < 3; x++) {\n      if (board[x][y] == \"O\") {\n        blessing++;\n      }\n      if (blessing == 2) {\n        let cpuy = y;\n        for (let k = 0; k < 3; k++) {\n          if (board[k][y] == 0) {\n            let cpux = k;\n            var string = \"#\" + cpux + cpuy;\n            board[cpux][cpuy] = turn;\n            $(string).text(turn);\n            return;\n          }\n        }\n        break;\n      }\n    }\n  }\n  if (board[1][1] == \"O\") {\n    if(board[0][0] == \"O\") {\n      if (board[2][2] == 0) {\n        board[2][2] = turn;\n        $(\"#22\").text(turn);\n        return;\n      }\n    } else if (board[2][2] == \"O\") {\n      if (board[0][0] == 0) {\n        board[0][0] = turn;\n        $(\"#00\").text(turn);\n        return;\n    }\n  }\n   if (board[0][2] == \"O\") {\n    if (board[2][0] == 0) {\n      board[2][0] = turn;\n      $(\"#20\").text(turn);\n      return;\n    }\n  } else if (board[2][0] == \"O\") {\n    if (board[0][2] == 0) {\n      board[0][2] = turn;\n      $(\"#02\").text(turn);\n      return;\n  }\n}\n}\n\n  let danger = 0;\n  for (var x = 0; x < 3; x++) {\n    danger = 0;\n    for (var y = 0; y < 3; y++) {\n      if (board[x][y] == \"X\") {\n        danger++;\n      }\n      if (danger == 2) {\n        let cpux = x;\n        for (let k = 0; k < 3; k++) {\n          if (board[x][k] == 0) {\n            let cpuy = k;\n            var string = \"#\" + cpux + cpuy;\n            board[cpux][cpuy] = turn;\n            $(string).text(turn);\n            return;\n          }\n        }\n        break;\n      }\n    }\n  }\n  for (var y = 0; y < 3; y++) {\n    danger = 0\n    for (var x = 0; x < 3; x++) {\n      if (board[x][y] == \"X\") {\n        danger++;\n      }\n      if (danger == 2) {\n        let cpuy = y;\n        for (let k = 0; k < 3; k++) {\n          if (board[k][y] == 0) {\n            let cpux = k;\n            var string = \"#\" + cpux + cpuy;\n            board[cpux][cpuy] = turn;\n            $(string).text(turn);\n            return;\n          }\n        }\n        break;\n      }\n    }\n  }\n  if (board[1][1] == \"X\") {\n    if(board[0][0] == \"X\") {\n      if (board[2][2] == 0) {\n        board[2][2] = turn;\n        $(\"#22\").text(turn);\n        return;\n      }\n    } else if (board[2][2] == \"X\") {\n      if (board[0][0] == 0) {\n        board[0][0] = turn;\n        $(\"#00\").text(turn);\n        return;\n    }\n  } else if (board[0][2] == \"X\") {\n    if (board[2][0] == 0) {\n      board[2][0] = turn;\n      $(\"#20\").text(turn);\n      return;\n    }\n  } else if (board[2][0] == \"X\") {\n    if (board[0][2] == 0) {\n      board[0][2] = turn;\n      $(\"#02\").text(turn);\n      return;\n  }\n}\n}\n  if (count == 2) {\n  if (firstMove == \"center\") {\n    if (board[0][2] == 0) {\n    board[0][2] = turn;\n    $(\"#02\").text(turn);\n    return;\n  } else {\n    board[2][0] = turn;\n    $(\"#20\").text(turn);\n    return;\n  }\n  }else if (firstMove == \"corner\") {\n    if (secondMove == \"corner\") {\n      board[2][1] = turn;\n      $(\"#21\").text(turn);\n      return;\n\n    } else if (secondMove == \"side\") {\n      if (board[0][0] == \"X\") {\n        board[2][2] = turn;\n        $(\"#22\").text(turn);\n        return;\n      }\n      if (board[0][2] == \"X\") {\n        board[2][0] = turn;\n        $(\"#20\").text(turn);\n        return;\n      }\n      if (board[2][0] == \"X\") {\n        board[0][2] = turn;\n        $(\"#02\").text(turn);\n        return;\n      }\n      if (board[2][2] == \"X\") {\n        board[0][0] = turn;\n        $(\"#00\").text(turn);\n        return;\n      }\n\n    }\n  } else if (firstMove == \"side\" && secondMove == \"side\") {\n    if (board[1][0] == \"X\" && board[2][1] == \"X\") {\n      board[2][0] = turn;\n      $(\"#20\").text(turn);\n      return;\n    }\n    if (board[2][1] == \"X\" && board[1][2] == \"X\") {\n      board[2][2] = turn;\n      $(\"#22\").text(turn);\n      return;\n    }\n    if (board[1][2] == \"X\" && board[0][1] == \"X\") {\n      board[0][2] = turn;\n      $(\"#02\").text(turn);\n      return;\n    }\n    if (board[0][1] == \"X\" && board[1][0] == \"X\") {\n      board[0][0] = turn;\n      $(\"#00\").text(turn);\n      return;\n    }\n  } else if (firstMove == \"side\" && secondMove == \"corner\") {\n    if (board[1][0] == \"X\") {\n      if (board[0][2] == \"X\") {\n        board[0][0] = turn;\n        $(\"#00\").text(turn);\n        return;\n      }\n      if (board[2][2] == \"X\") {\n        board[2][0] = turn;\n        $(\"#20\").text(turn);\n        return;\n      }\n    }\n    if (board[2][1] == \"X\") {\n      if (board[0][0] == \"X\") {\n        board[2][0] = turn;\n        $(\"#20\").text(turn);\n        return;\n      }\n      if (board[0][2] == \"X\") {\n        board[2][2] = turn;\n        $(\"#22\").text(turn);\n        return;\n      }\n    }\n    if (board[1][2] == \"X\") {\n      if (board[0][0] == \"X\") {\n        board[0][2] = turn;\n        $(\"#02\").text(turn);\n        return;\n      }\n      if (board[2][0] == \"X\") {\n        board[2][2] = turn;\n        $(\"#22\").text(turn);\n        return;\n      }\n    }\n    if (board[0][1] == \"X\") {\n      if (board[2][0] == \"X\") {\n        board[0][0] = turn;\n        $(\"#00\").text(turn);\n        return;\n      }\n      if (board[2][2] == \"X\") {\n        board[2][0] = turn;\n        $(\"#00\").text(turn);\n        return;\n      }\n    }\n\n  }\n}\n  while (true) {\n  let cpux = getRandomInt(3)\n  let cpuy = getRandomInt(3)\n  if (board[cpux][cpuy] == 0) {\n   var string = \"#\" + cpux + cpuy;\n   board[cpux][cpuy] = turn;\n   $(string).text(turn);\n   return;\n  }\n}\n\n\n  }\n\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * Math.floor(max));\n}\n"],"sourceRoot":""}